---
kind: pipeline
name: default

steps:
  ## Pull the last build .m2 from GCloud bucket
  - &cache
    name: restore-cache
    image: homerovalle/drone-gcs-cache
    settings:
      &cache-settings
      pull: true
      bucket: drone-agent-m2-cache
      json_key:
        from_secret: gcloud_bucket_access_key_json
      restore: true
      debug: true

  ## Run the build
  - name: build-artifacts
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      # Import PGP keys
      - >
        export GPG_TTY=/dev/console ||
        echo "$${GPG_SECRET_KEYS}" | base64 --decode | gpg --import --batch ||
        echo "$${GPG_OWNERTRUST}" | base64 --decode | gpg --import-ownertrust
      
      # Calculate version number
      - >
        export VERSION_FROM_POM_FULL_VERSION=$$(python -c "import xml.etree.ElementTree as ET; print(ET.parse(open('/drone/src/pom.xml')).getroot().find('{http://maven.apache.org/POM/4.0.0}version').text)") ||
        echo "Version in POM (VERSION_FROM_POM_FULL_VERSION): $${VERSION_FROM_POM_FULL_VERSION}" ||
        export VERSION_FROM_POM_BASE_VERSION=$(echo "$${VERSION_FROM_POM_FULL_VERSION}" | cut -d'-' -f 1) ||
        echo "Base version from POM (VERSION_FROM_POM_BASE_VERSION): $${VERSION_FROM_POM_BASE_VERSION}" ||
        export CI_SHORT_COMMIT_SHA= $(git rev-parse --short $${CI_COMMIT_SHA}) ||
        export VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME=$(echo "$${CI_COMMIT_BRANCH}" | cut -d ' ' -f2 | tr '\/\.-' '_') ||
        echo "Current branch name (VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME): $${VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME}" ||
        export VERSION_NUMBER=$${VERSION_FROM_POM_BASE_VERSION}.$$(date +%Y%m%d_%H%M%S)_$${CI_SHORT_COMMIT_SHA}_$${VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME} ||
        echo "Building version: $${VERSION_NUMBER}"

      # Run maven build
      - mvn -B -s /drone/src/.maven.xml clean package
    environment:
      GPG_SECRET_KEYS:
        from_secret: gpg_secret_keys
      GPG_OWNERTRUST:
        from_secret: gpg_ownertrust
      M2_HOME: /drone/.m2
      MAVEN_HOME: /drone/.m2
      MAVEN_OPTS:
        -Dstyle.color=always
        -Djansi.force=true
        -Dorg.apache.maven.user-settings=/drone/src/.maven.xml
        -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        -Dorg.ops4j.pax.url.mvn.settings=/drone/src/.maven.xml
        -DuseCustomSettings=true

    secrets: [ sonatype_username, sonatype_password, gpg_keyname, gpg_executable, gpg_passphrase, gpg_secret_keys, gpg_ownertrust, github_access_token, blackbelt_nexus_username, blackbelt_nexus_password]
    when:
      event:
        - push
        - pull_request

  ## Push the current .m2 cache to GCloud bucket
  - <<: *cache
    name: rebuild-cache
    settings:
      <<: *cache-settings
      rebuild: true
      restore: false
      mount:
        - .m2
      when:
        status:
        - success
        - failure
        
  ## Flush the old .m2 cache from GCloud bucket
  - <<: *cache
    name: flush_cache
    settings:
      <<: *cache-settings
      restore: false
      flush: true
      flush_age: 31

