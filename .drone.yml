---
kind: pipeline
name: default

anchor-maven-secrets: &maven-secrets
  - judong_nexus_username
  - judong_nexus_password
  - sonatype_username
  - sonatype_password
  - blackbelt_nexus_username
  - blackbelt_nexus_password

anchor-gpg-secrets: &gpg-secrets
  - gpg_keyname
  - gpg_executable
  - gpg_passphrase
  - gpg_secret_keys
  - gpg_ownertrust

anchor-github-secrets: &github-secrets
  - github_access_token

anchor-maven-env: &maven-env
  JUDONG_NEXUS_DISTRIBUTION_URL: https://nexus.judo.technology/repository/maven-judong-snapshots/
  JUDONG_NEXUS_MIRROR_URL: https://nexus.judo.technology/repository/maven-judong/
  JUDONG_NEXUS_USERNAME:
    from_secret: judong_nexus_username
  JUDONG_NEXUS_PASSWORD:
    from_secret: judong_nexus_password
#  SONATYPE_USERNAME:
#    from_secret: sonatype_username
#  SONATYPE_PASSWORD:
#    from_secret: sonatype_password
  BLACKBELT_NEXUS_USERNAME:
    from_secret: blackbelt_nexus_username
  BLACKBELT_NEXUS_PASSWORD:
    from_secret: blackbelt_nexus_password
  M2_HOME: /drone/src/.m2
  MAVEN_EXEC: >-
    mvn
    -Djansi.force=true
    -Dorg.ops4j.pax.url.mvn.settings=/drone/src/.maven.xml
    -DuseCustomSettings=true
    -Dstyle.color=always
    -ntp
    -s .maven.xml
#    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
anchor-gpg-env: &gpg-env
  GPG_KEYNAME:
    from_secret: gpg_keyname
  GPG_PASSPHRASE:
    from_secret: gpg_passphrase
  GPG_SECRET_KEYS:
    from_secret: gpg_secret_keys
  GPG_OWNERTRUST:
    from_secret: gpg_ownertrust

anchor-github-env: &github-env
  GITHUB_ACCESS_TOKEN:
    from_secret: github_access_token

steps:
  - &cache
    name: restore-cache
    image: homerovalle/drone-gcs-cache
    settings: &cache-settings
      pull: true
      bucket: drone-agent-m2-cache
      json_key:
        from_secret: gcloud_bucket_access_key_json
      restore: true
      debug: true
    secrets: [gcloud_bucket_access_key_json]

  - name: set-pom-version
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      - export VERSION_FROM_POM_BASE_VERSION=$(echo "$(mvn help:evaluate -Dexpression=project.version -Dtycho.mode=maven -q -DforceStdout )" | cut -d'-' -f 1)
      - export VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME=$(echo "$${CI_COMMIT_BRANCH}" | cut -d ' ' -f2 | tr '\/\.-' '_')
      - export VERSION_NUMBER=$${VERSION_FROM_POM_BASE_VERSION}.$(date +%Y%m%d_%H%M%S)_${CI_COMMIT_SHA:0:8}_$${VERSION_FROM_GIT_TAG_CURRENT_BRANCH_VALID_NAME}
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        -DnewVersion=$${VERSION_NUMBER}
        -DgenerateBackupPoms=false
        versions:set
    environment:
      <<: *maven-env
    secrets: *maven-secrets
    when:
      event:
        - push

  - name: update-eclipse-version
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      # Update target definition version
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        -f ./targetdefinition/pom.xml
        -P update-target-versions
        validate
      # Update site version
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        -f ./site/pom.xml
        -P update-category-versions
        validate
      # Update tycho versions
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        tycho-versions:update-eclipse-metadata
    environment:
      <<: *maven-env
    secrets: *maven-secrets
    when:
      event:
        - push

  - name: build-and-deploy-artifacts
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      - export GPG_TTY=/dev/console
      - echo "$${GPG_SECRET_KEYS}" | base64 --decode | gpg --import --batch
      - echo "$${GPG_OWNERTRUST}" | base64 --decode | gpg --import-ownertrust
      - >-
        $${MAVEN_EXEC}
        -P test-judo-psm,sign-artifacts,release-judo-ng
        clean deploy
    environment:
      <<: [*maven-env, *gpg-env]
    secrets: [*maven-secrets, *gpg-secrets]
    when:
      event:
        - push

  - name: release-to-github
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        -DdeployOnly
        -Dgithub_release=true
        -Dgithub.prerelease=true
        -Dgithub.commitish=$${CI_COMMIT_SHA}
        -P release-dummy,release-github
        deploy
    environment:
      <<: [*maven-env, *github-env]
    secrets: [*maven-secrets, *github-secrets]
    when:
      event:
        - push

  - name: release-to-p2
    pull: default
    image: maven:3.6.2-jdk-8
    commands:
      - >-
        $${MAVEN_EXEC}
        -Dtycho.mode=maven
        -DdeployOnly
        -P release-dummy,release-p2-blackbelt
        deploy
    environment:
      <<: *maven-env
    secrets: *maven-secrets
    when:
      event:
        - push

  ## Push the current .m2 cache to GCloud bucket
  ## The failed build also push the cache
  - <<: *cache
    name: rebuild-cache
    settings:
      <<: *cache-settings
      rebuild: true
      restore: false
      mount:
        - .m2
    when:
      status:
        - success
        - failure

  ## Flush the old .m2 cache from GCloud bucket
  - <<: *cache
    name: flush_cache
    settings:
      <<: *cache-settings
      restore: false
      flush: true
      flush_age: 31

