import "../../operations/measure/_importMeasure.eol";

context JUDOPSM!Measure {

    // base unit of measure should be defined (recommended only, base unit is used for calculations)
    critique BaseUnitShouldBeDefined {
        check: self.getBaseUnit().isDefined()
        message: "No base unit is defined for measure: " + self.name
    }

    // circular references in unit definitions is invalid
    constraint NoCircularReferencesOfUnits {
        check: not self.isKindOf(JUDOPSM!DerivedMeasure) or not self.hasCircularReference()
        message: "Derived measure definition " + self.name + " is recursive"
    }

    // no multiple measures are defined for the same dimension
    constraint DimensionsAreUnique {
        check {
            var dimensions = new Map;
		    for (m in JUDOPSM!Measure.all.excluding(self)) {
		        dimensions.put(m.getBaseMeasures(), m);
		    }
		    return not dimensions.containsKey(self.getBaseMeasures());
        }
        message: "Multiple measures are defined for the same dimension: " + self.name
    }
    
    // measure name should be unique
    critique MeasureNameIsUnique {
        check: not JUDOPSM!Measure.all.excluding(self).selectOne(m | m.name = self.name).isDefined()
        message: "Measure name is not unique: " + self.name
    }    
}
