//TODO-ask: Should NamedElements' name be unique in whole model? (pbbly not)
context PSM!NamedElement {

    constraint NamedElementHasContainer {
        guard: not self.isKindOf(PSM!Model)
        check: self.eContainer.isDefined()
        message: "Named element " + self.name + " has no container"
    }
    
    constraint NamedElementIsUniqueInItsContainer {
        guard: self.eContainer.isDefined()
        check: not self.eContainer.eContents.select(c | c.isKindOf(PSM!NamedElement) and c <> self).exists(ne | ne.name.toLowerCase() == self.name.toLowerCase())
        message: "Named element " + self.name + " is not unique in its container"
    }
}

context PSM!TransferObjectRelation {

	constraint UnmappedTransferObjectTypeHasNoRelationBinding {
		guard: self.eContainer.isDefined() and self.eContainer.isKindOf(PSM!UnmappedTransferObjectType)
		check: not self.binding.isDefined()
		message: "Transfer object relation " + self.name + " of unmapped transfer object " + self.eContainer().name + " must not have binding."	
	}
	
	constraint TargetMatchesBindingTarget{
        guard:  self.target.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
        check:  self.target.entityType.getAllSuperEntityTypes().including(self.target.entityType).contains(self.binding.target)
        message: "EntityType of mapped transfer object type " + self.target.name + " (target of transfer object relation " + self.name
        			+ ") must match the target of the binding of transfer object relation " + self.name + "."  
    }
    
    constraint CardinalityMatchesBindingCardinality {
        guard:  self.binding.isDefined()
        check:  (self.cardinality.lower == self.binding.cardinality.lower) and
                (self.cardinality.upper == self.binding.cardinality.upper)
        message: "Transfer object relation " + self.name + " and its binding must have the same cardinality."
    }
}

context PSM!TransferAttribute {

	constraint UnmappedTransferObjectTypeHasNoAttributeBinding {
		guard: self.eContainer.isDefined() and self.eContainer.isKindOf(PSM!UnmappedTransferObjectType)
		check: not self.binding.isDefined()
		message: "Transfer object attribute " + self.name + " of unmapped transfer object " + self.eContainer().name + " must not have binding."
	}
	
    constraint DataTypeMatchesBindingDataType {
        guard:  self.binding.isDefined()
        check:  self.dataType == self.binding.dataType
        message: "DataType of transfer attribute " + self.name + " must match the dataType of its binding."
    }
    
    constraint RequiredFlagMatchesBindingRequiredFlag {
        guard:  self.binding.isDefined()
        check:  self.required == self.binding.required
        message: "Required flag of transfer attribute " + self.name + " must equal required flag of its binding."
    }
}