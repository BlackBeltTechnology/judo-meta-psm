context PSM!TransferAttribute {

    constraint UnmappedTransferObjectTypeHasNoAttributeBinding {
        guard: self.satisfies("NamedElementHasContainer") and self.eContainer.isKindOf(PSM!UnmappedTransferObjectType)
        check: not self.binding.isDefined()
        message: "Transfer object attribute " + self.name + " of unmapped transfer object " + self.eContainer().name + " must not have binding."
    }
    
    constraint DataTypeMatchesBindingDataType {
        guard:  self.binding.isDefined()
        check:  self.dataType == self.binding.dataType
        message: "DataType of transfer attribute " + self.name + " must match the dataType of its binding."
    }
    
    constraint RequiredFlagMatchesBindingRequiredFlag {
        guard:  self.binding.isDefined()
        check:  self.required == self.binding.required
        message: "Required flag of transfer attribute " + self.name + " must equal required flag of its binding."
    }
    
    constraint TransferAttributeBindingIsValid {
        guard: self.satisfies("NamedElementHasContainer") and self.eContainer.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
        check: self.eContainer().entityType.getAllSuperEntityTypes().including(self.eContainer().entityType).contains(self.binding.eContainer()) or
                self.binding.isKindOf(PSM!StaticData)
        message: "Binding of transfer attribute " + self.name + " of mapped transfer object " + self.eContainer().name +
                " must either match the entity type of the mapped tranfer object or be StaticData."
    }
    
    constraint InheritedAndOwnTransferAttributeNameIsUniqueInTransferObjectType {
        guard: self.satisfies("NamedElementHasContainer")
        check: not self.eContainer().getAllSuperTransferObjectTypes()
                    .collect(c | c.eContents()).flatten()
                    .select(c | c.isKindOf(PSM!NamedElement)).exists(ne | ne.name.toLowerCase() == self.name.toLowerCase())
        message: "Transfer attribute: " + self.name + " has the same name as inherited content(s) of transfer object type: " + self.eContainer().name
    }
}
