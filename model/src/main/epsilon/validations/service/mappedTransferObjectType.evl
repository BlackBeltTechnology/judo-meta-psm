context PSM!MappedTransferObjectType{

    constraint AllRequiredFeaturesHaveBindingIfCreatable {
    	guard: (PSM!BoundTransferOperation.all
    				.select(o | o.behaviour.isDefined() and 
    							(o.behaviour.behaviourType == PSM!TransferOperationBehaviourType#CREATE_RELATION or 
    							o.behaviour.behaviourType == PSM!TransferOperationBehaviourType#VALIDATE_CREATE))
    				.exists(c | c.behaviour.satisfies("OwnerOfBoundBehaviourIsValid") and c.behaviour.owner.target == self) or
    			PSM!UnboundOperation.all
    				.select(o | o.behaviour.isDefined() and 
    							(o.behaviour.behaviourType == PSM!TransferOperationBehaviourType#CREATE_RELATION or 
    							o.behaviour.behaviourType == PSM!TransferOperationBehaviourType#VALIDATE_CREATE))
    				.exists(c | c.behaviour.satisfies("OwnerOfBoundBehaviourIsValid") and c.behaviour.owner.target == self) )
    		
    		and self.getRelations().select(r | r.binding.isDefined())
    			.forAll(r | r.satisfiesAll("TargetMatchesBindingTarget","CardinalityMatchesBindingCardinality","TransferObjectRelationBindingIsValid"))
    		
    		and self.getAttributes().select(a | a.binding.isDefined())
    			.forAll(a | a.satisfiesAll("DataTypeMatchesBindingDataType","RequiredFlagMatchesBindingRequiredFlag","TransferAttributeBindingIsValid"))

    	check: psmUtils.getUnboundRequiredFeaturesOfMappingTarget(self).isEmpty()
    	
    	message: self.name + " is used by create operation and excludes required features: " + psmUtils.getUnboundRequiredFeaturesOfMappingTarget(self).concat(", ")
    }
}
