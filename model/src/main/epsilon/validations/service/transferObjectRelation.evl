context PSM!TransferObjectRelation {

    constraint UnmappedTransferObjectTypeHasNoRelationBinding {
        guard: self.satisfies("NamedElementHasContainer") and self.eContainer.isKindOf(PSM!UnmappedTransferObjectType)
        check: not self.binding.isDefined()
        message: "Transfer object relation " + self.name + " of unmapped transfer object " + self.eContainer().name + " must not have binding." 
    }
    
    constraint TargetMatchesBindingTarget{
        guard:  self.target.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
        check:  self.target.entityType.getAllSuperEntityTypes().including(self.target.entityType).contains(self.binding.target)
        message: "EntityType of mapped transfer object type " + self.target.name + " (target of transfer object relation " + self.name
                    + ") must match the target of the binding of transfer object relation " + self.name + "."  
    }
    
    constraint CardinalityMatchesBindingCardinality {
        guard:  self.binding.isDefined()
        check:  (self.cardinality.lower == self.binding.cardinality.lower) and
                (self.cardinality.upper == self.binding.cardinality.upper)
        message: "Transfer object relation " + self.name + " and its binding must have the same cardinality."
    }

    constraint TransferObjectRelationIsEmbedded {
        guard: self.target.isKindOf(PSM!UnmappedTransferObjectType)
        check: self.embedded
        message: "Transfer object relation " + self.name + " is referencing to unembedded unmapped transfer object type: " + self.target.name
    }
    
    constraint TransferObjectRelationBindingIsValid {
        guard: self.satisfies("NamedElementHasContainer") and self.eContainer.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
        check:  self.eContainer().entityType.getAllSuperEntityTypes().including(self.eContainer().entityType).contains(self.binding.eContainer()) or
                self.binding.isKindOf(PSM!StaticNavigation) 
        message: "Binding of transfer object relation " + self.name + " of mapped transfer object " + self.eContainer().name +
                " must either match the entity type of the mapped tranfer object or be StaticNavigation."
    }
    
    constraint InheritedAndOwnTransferObjectRelationNameIsUniqueInTransferObjectType {
        guard: self.satisfies("NamedElementHasContainer")
        check: not self.eContainer().getAllSuperTransferObjectTypes()
                    .collect(c | c.eContents()).flatten()
                    .select(c | c.isKindOf(PSM!NamedElement))
                    .exists(ne | ne.name.toLowerCase() == self.name.toLowerCase())
        message: "Transfer object relation: " + self.name + " has the same name as inherited content(s) of transfer object type: " + self.eContainer().name
    }   
}
