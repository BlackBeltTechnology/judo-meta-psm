context PSM!StringType {

    // maxLength > 0
	constraint ValidMaxLength {
		check: self.maxLength > 0
		message: "MaxLength must be greater than 0: " + self.name
	}

    // maxLength <= 4000
	constraint MaxLengthIsNotTooLarge {
		check: self.maxLength <= 4000
		message: "MaxLength must be less than/equals to 4000: " + self.name
	}

    // regular expression must be syntactically correct
	constraint ValidRegex {
	    guard: self.regExp.isDefined()
	    check {
            var psmUtils = new Native("hu.blackbelt.judo.meta.psm.PsmUtils"); //TODO-ask: pbbly not the best place for isRegex(), ask where to put it
            return psmUtils.isRegex(self.regExp);
	    }
	    message: "Invalid regular expression of " + self.name
	}
}