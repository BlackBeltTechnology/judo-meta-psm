context PSM!Primitive {
    /* TODO-ask: remove?
    // primitive type names should be unique
    critique TypeNamesAreUnique {
        check: not PSM!Primitive.all.excluding(self).selectOne(t | t.name == self.name).isDefined()
        message: "Type name is not unique: " + self.name
    }
    */
}

context PSM!EntityType {
    /* TODO-ask: remove?
    // entity type names should be unique
    critique TypeNamesAreUnique {
        check: not PSM!EntityType.all.excluding(self).selectOne(t | t.name == self.name).isDefined()
        message: "Type name is not unique: " + self.name
    }
    */
}

context PSM!TransferObjectType {
    /* TODO-ask: remove?
    // transfer object type names should be unique
    critique TypeNamesAreUnique {
        check: not PSM!TransferObjectType.all.excluding(self).selectOne(t | t.name == self.name).isDefined()
        message: "Type name is not unique: " + self.name
    }
    */
}

context PSM!TransferObjectRelation {

    constraint TransferObjectRelationIsEmbedded {
		guard: self.target.isKindOf(PSM!UnmappedTransferObjectType)
		check: self.embedded
		message: "Transfer object relation " + self.name + " is referencing to unembedded unmapped transfer object type: " + self.target.name
	}
	
	constraint TransferObjectRelationBindingIsValid {
		guard: self.eContainer().isDefined() and self.eContainer.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
		check: 	self.eContainer().entityType.getAllSuperEntityTypes().including(self.eContainer().entityType).contains(self.binding.eContainer()) or
				self.binding.isKindOf(PSM!StaticNavigation)	
		message: "Binding of transfer object relation " + self.name + " of mapped transfer object " + self.eContainer().name +
				" must either match the entity type of the mapped tranfer object or be StaticNavigation."
	}	
}

context PSM!TransferAttribute {
	
	constraint TransferAttributeBindingIsValid {
		guard: self.eContainer().isDefined() and self.eContainer.isKindOf(MappedTransferObjectType) and self.binding.isDefined()
		check: self.eContainer().entityType.getAllSuperEntityTypes().including(self.eContainer().entityType).contains(self.binding.eContainer()) or
				self.binding.isKindOf(PSM!StaticData)
		message: "Binding of transfer attribute " + self.name + " of mapped transfer object " + self.eContainer().name +
				" must either match the entity type of the mapped tranfer object or be StaticData."
	}
}

